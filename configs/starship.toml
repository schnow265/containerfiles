[aws]
format = '\[[$symbol($profile)(\($region\))(\[$duration\])]($style)\]'
symbol = "Óû≠ "
region_aliases = {}
profile_aliases = {}
style = 'bold yellow'
expiration_symbol = 'X'
disabled = true
force_display = false

[azure]
format = '\[[$symbol($subscription)]($style)\]'
symbol = "ÓØò "
style = "blue bold"
disabled = true
subscription_aliases = {  }

[battery]
charging_symbol = "Û∞ÇÑ "
disabled = false
discharging_symbol = "Û∞ÇÉ "
empty_symbol = "Û∞Çé "
format = '\[[$symbol$percentage]($style)\]'
full_symbol = "Û∞Åπ "
unknown_symbol = "Û∞ÅΩ "

[buf]
format = '\[[$symbol($version)]($style)\]'
version_format = 'v${raw}'
symbol = "Óæñ"
detect_extensions = [  ]
detect_files = [ "buf.yaml", "buf.gen.yaml", "buf.work.yaml" ]
detect_folders = [  ]
style = "bold blue"
disabled = true

[bun]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${raw}"
symbol = "Óäç "
detect_extensions = [  ]
detect_files = [ "bun.lockb", "bunfig.toml" ]
style = "bold red"
disabled = false

[c]
format = '\[[$symbol($name)]($style)\]'
version_format = "v${raw}"
symbol = "Óòû "
commands = [ [ "clang", "--version" ] ]
style = "149 bold"
disabled = false

[cmake]
format = '\[[$symbol($version)]($style)\]'
version_format = "v${raw}"
symbol = "Û∞áÇ "
detect_extensions = [  ]
detect_files = [ "CMakeLists.txt", "CMakeCache.txt" ]
detect_folders = [  ]
style = "bold blue"
disabled = false

[cobol]
format = '\[[$symbol($version)]($style)\]'
symbol = "ÔÄì "
version_format = "v${raw}"
style = "bold blue"
detect_extensions = [ "cbl", "cob", "CBL", "COB" ]
detect_files = [  ]
detect_folders = [  ]
disabled = false

[cmd_duration]
format = '\[[‚è± $duration]($style)\]'

[conda]
format = '\[[$symbol$environment]($style)\]'
disabled = false
ignore_base = true
style = "green bold"
symbol = "üÖí "
truncation_length = 1

[container]
format = '\[[$symbol\[$name\]]($style)\]'
disabled = false
style = "red bold dimmed"
symbol = "Ôí∑"

[crystal]
format = '\[[$symbol($version)]($style)\]'
detect_extensions = [ "cr" ]
detect_files = [ "shard.yml" ]
detect_folders = [  ]
disabled = false
style = "bold red"
symbol = "ÓòØ"
version_format = "v${raw}"

[daml]
format = '\[[$symbol($version)]($style)\]'

[dart]
format = '\[[Óôå ($version)]($style)\]'

[deno]
format = '\[[$symbol($version)]($style)\]'

[direnv]
format = '\[[$symbol$loaded/$allowed @ $rc_path]($style)\]'
symbol = "ÔÅª "
disabled = false

[docker_context]
format = '\[[$symbol$context]($style)\]'

[dotnet]
format = '\[[Óùø ($version)( Û∞©∑ $tfm)]($style)\]'
detect_extensions = ['csproj', 'fsproj', 'xproj', 'sln']

[elixir]
format = '\[[Óò≠ ($version \(OTP $otp_version\))]($style)\]'

[elm]
format = '\[[$symbol($version)]($style)\]'

[erlang]
format = '\[[Óû± ($version)]($style)\]'

[fennel]
format = '\[[$symbol($version)]($style)\]'

[fossil_branch]
format = '\[[$symbol$branch]($style)\]'

[gcloud]
format = '\[[Óû≤ $account(@$domain)(\($region\))]($style)\]'

[git_branch]
format = '\[[$symbol$branch]($style)\]'

[git_commit]
format = '\[[Ó´º $hash$tag]($style)\]'
disabled = false
only_detached = false
tag_disabled = true

[git_state]
disabled = false
format = '\[\([$state( $progress_current/$progress_total)]($style)\)\]'
cherry_pick = '[üçí](bold red)'
bisect = '[ü¶¨](bold yellow)'
rebase = '[Ôêò](bold cyan)'
merge = '[Ôêô](bold cyan)'
am = '[Û∞∂â](bold blue)'
am_or_rebase = '[Û∞∂â / Ôêò](bold fg:17)'

[git_metrics]
disabled = false
format = '\[([+$added]($added_style) )([-$deleted]($deleted_style))\]'

[git_status]
format = '([\[$all_status$ahead_behind\]]($style))'

[golang]
format = '\[[$symbol ($version)]($style)\]'
symbol = "Û∞üì"

[gradle]
format = '\[[$symbol ($version)]($style)\]'
symbol = "Óô†"

[guix_shell]
format = '\[[$symbol]($style)\]'

[haskell]
format = '\[[Óù∑ ($version)]($style)\]'

[haxe]
format = '\[[Óô¶ ($version)]($style)\]'

[helm]
format = '\[[$symbol($version)]($style)\]'

[hg_branch]
format = '\[[$symbol$branch]($style)\]'

[java]
format = '\[[Óú∏ ($version)]($style)\]'

[julia]
format = '\[[Óò§ ($version)]($style)\]'

[kotlin]
format = '\[[Óò¥ ($version)]($style)\]'

[kubernetes]
format = '\[[Û±Éæ $context( \($namespace\))]($style)\]'

[lua]
format = '\[[Óò† ($version)]($style)\]'

[memory_usage]
format = '\[$symbol[$ram( | $swap)]($style)\]'

[meson]
format = '\[[$symbol$project]($style)\]'

[nim]
format = '\[[$symbol($version)]($style)\]'

[nix_shell]
format = '\[[$symbol$state( \($name\))]($style)\]'

[nodejs]
format = '\[[Ó¥ç ($version)]($style)\]'

[ocaml]
format = '\[[Óô∫ ($version)(\($switch_indicator$switch_name\))]($style)\]'

[opa]
format = '\[[$symbol($version)]($style)\]'

[openstack]
format = '\[[$symbol$cloud(\($project\))]($style)\]'

[os]
format = '\[[$symbol]($style)\]'

[package]
format = '\[[Ó¨© $version]($style)\]'

[perl]
format = '\[[Óôæ ($version)]($style)\]'

[php]
format = '\[[Óòà ($version)]($style)\]'

[pijul_channel]
format = '\[[$symbol$channel]($style)\]'

[pulumi]
format = '\[[$symbol$stack]($style)\]'

[purescript]
format = '\[[$symbol($version)]($style)\]'

[python]
format = '\[[Óúº ${pyenv_prefix}(${version})(\($virtualenv\))]($style)\]'

[raku]
format = '\[[$symbol($version-$vm_version)]($style)\]'

[red]
format = '\[[$symbol($version)]($style)\]'

[ruby]
format = '\[[Óúπ ($version)]($style)\]'

[rust]
format = '\[[Óû® ($version)]($style)\]'

[scala]
format = '\[[Óú∑ ($version)]($style)\]'

[shell]
disabled = false
format = '\[[$indicator]($style)\] '
style = 'cyan bold'
bash_indicator = "bsh"
cmd_indicator = 'cmd'
elvish_indicator = "esh"
fish_indicator = "fsh"
ion_indicator = "ion"
nu_indicator = 'nu'
powershell_indicator = 'pwsh'
pwsh_indicator = "pwsh"
tcsh_indicator = "tsh"
unknown_indicator = "?"
xonsh_indicator = "xsh"
zsh_indicator = "zsh"

[spack]
format = '\[[$symbol$environment]($style)\]'

[sudo]
format = '\[[as $symbol]($style)\]'
disabled = true # FOR THE LOVE OF YOUR LIVE, DO NOT, I REPEAT: NOT! ENABLE THE SUDO MODULE!!

[swift]
format = '\[[Óùï ($version)]($style)\]'

[terraform]
format = '\[[Û±Å¢ $workspace]($style)\]'

[time]
format = '\[[$time]($style)\]'

[username]
format = '\[[$user]($style)\]'

[vagrant]
format = '\[[$symbol($version)]($style)\]'

[vlang]
format = '\[[$symbol($version)]($style)\]'

[zig]
format = '\[[$symbol($version)]($style)\]'

[solidity]
format = '\[[$symbol($version)]($style)\]'